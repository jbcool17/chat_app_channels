<p style="font-size: 1.5em;">Hello <strong style="background-color: <%= @user.color %>"><%= @user.name %></strong>, Welcome to <%= @current_channel.name %>! </p>

<div>
  <div id="chooseChannel">
    <form id="channelForm" action='/chat/input/<%= @user.name %>' method="post">
      <select class="channels" name="">
        <option value="">Switch Channel</option>
        <% @channels.each do |c| %>
          <option value="<%= c.name %>"><%= c.name %></option>
        <% end %>
      </select>
    </form>
  </div>

  <div id="socketStatus"></div>
</div>
<hr>
<div id="dump"></div>

<hr>

<div id="chatInput">
  <form>
      <label for="message">MESSAGE: </label>
      <input type="text" id="input" name="message" placeholder="send a message"></input>
      <input id="send_message" class="btn btn-sm btn-primary" type="submit">
  </form>
</div>

<hr>

<a href='/'>Go Back to Home</a>

<script>
$(document).ready(function(){
  $('input#input').focus();
  $('input#input').select();
  $('.channels option:contains("<%= @current_channel.name%>")')

  $('select.channels').on('change', function(e){
    console.log()
    var input = e.target.value
    if (!input){ return;}

    $('#channelForm').attr('action', '/chat/' + input + '/' + '<%= @user.name %>')

    $('#channelForm').submit();

  });

  var re = /https|http/,
      protocol = re.exec(window.location.protocol),
      wsProtocol = protocol[0] === 'https' ? 'wss://' : 'ws://' ;

  // WEBSOCKET
  var ws = new WebSocket(wsProtocol + window.location.host + window.location.pathname);
  ws.onopen    = function()  { $('#socketStatus').append('CHAT-STATUS: websocket opened'); }
  ws.onclose   = function()  { $('#socketStatus').html('CHAT-STATUS: websocket closed'); }
  ws.onmessage = function(data) {
      var dataArray = data.data.split(',')
      var row = {date: dataArray[0], user: dataArray[1], message: dataArray[2], color: dataArray[3]}

      if ( row.message !== "ping") {
        $('#dump > ul > li:last-child').after(createLI(row));
        autoScroll();
      }


  };

  // Initial Setup
  readAndDisplayFromDatabase('<%= @current_channel.name %>');
  $('#message').focus();
  $('#message').select();

  // Send Message Functions
  $('#message').keypress(function (e) {
    if (e.which == 13) {
      checkInput();
      return false;
    }
  });

  $("#send_message").click(function(){
    checkInput();
    return false;
  });

  function checkInput(){
    var input = $('#input').val();
    if (input.length > 0){
      postAndUpdate(input);
        $('#input').val('');
      } else {
        alert("Please Enter a message!")
      }
  }

// Handle Data / Generate HTML - Functions
  function readAndDisplayFromDatabase(channel) {
    $.ajax({
      url: '/messages/' + channel,
      dataType: 'json',
    }).done(function(data){
      createList(data);
      autoScroll();
    })
  };

  function createList(data){
    var allRows = data;
    var list = '<ul id="chatWindow">';
    for (var i = 0; i < allRows.length; i++){
      var row = allRows[i]

      if ( row.user === "STATUS") {
        list += createLI(row)
      } else {
        list += createLI(row)
      }
    }

    list += '</ul>'

    $('#dump').append(list)
  }

  function createLI(row){
    var date = new Date(row.date).toString().split('GMT');

    return '<li style="background-color:' + row.color + '">' + date[0] + ' | ' + row.user + ' : ' + row.message + '</li>'
  }

  function autoScroll(){
    $("ul#chatWindow").animate({ scrollTop: $("ul#chatWindow")[0].scrollHeight }, "slow");
  }

  function postAndUpdate(text) {
    var user = "<%= @user.name %>"
    var data = {date: Date(), user: user, message: text, color: "<%= @user_color %>"}

    console.log('STATUS=> triggering sockets...')
    ws.send([data.date,data.user,data.message,data.color].join(','));
  }

  // PING - Keeps Websocket Alive - 60sec - Doesn't Work on HEROKU
  setInterval(function(){
    console.log('ping')
    ws.send('ping,ping,ping,ping');
  }, 30000)

});
</script>
